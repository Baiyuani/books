---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/instance: gitlab-ce
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gitlab-ce
    app.kubernetes.io/version: "16.8.1-ce.0"
    helm.sh/chart: gitlab-ce-0.0.1
  name: gitlab-ce-conf
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: "nfs-client"
  volumeMode: Filesystem

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/instance: gitlab-ce
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gitlab-ce
    app.kubernetes.io/version: "16.8.1-ce.0"
    helm.sh/chart: gitlab-ce-0.0.1
  name: gitlab-ce-data
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Ti
  storageClassName: "nfs-client"
  volumeMode: Filesystem

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/instance: gitlab-ce
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gitlab-ce
    app.kubernetes.io/version: "16.8.1-ce.0"
    helm.sh/chart: gitlab-ce-0.0.1
  name: gitlab-ce-logs
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 500Gi
  storageClassName: "nfs-client"
  volumeMode: Filesystem

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: gitlab-ce
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gitlab-ce
    app.kubernetes.io/version: "16.8.1-ce.0"
    helm.sh/chart: gitlab-ce-0.0.1
  name: gitlab-ce
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/instance: gitlab-ce
    app.kubernetes.io/name: gitlab-ce
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: gitlab-ce
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gitlab-ce
    app.kubernetes.io/version: "16.8.1-ce.0"
    helm.sh/chart: gitlab-ce-0.0.1
  name: gitlab-registry
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app.kubernetes.io/instance: gitlab-ce
    app.kubernetes.io/name: gitlab-ce
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: gitlab-ce
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gitlab-ce
    app.kubernetes.io/version: "16.8.1-ce.0"
    helm.sh/chart: gitlab-ce-0.0.1
  name: gitlab-ce
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: gitlab-ce
      app.kubernetes.io/name: gitlab-ce
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: gitlab-ce
        app.kubernetes.io/name: gitlab-ce
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/critical-apps
                operator: In
                values:
                - gitlab
      containers:
      - image: gitlab/gitlab-ce:16.8.1-ce.0
        imagePullPolicy: IfNotPresent
        name: gitlab-ce
        ports:
        - containerPort: 22
          name: 22tcp
          protocol: TCP
        - containerPort: 80
          name: 80tcp
          protocol: TCP
        - containerPort: 443
          name: 443tcp
          protocol: TCP
        - containerPort: 5000
          name: 5000tcp
          protocol: TCP
        - containerPort: 5050
          name: 5050tcp
          protocol: TCP
        - containerPort: 8080
          name: 8080tcp
          protocol: TCP
        - containerPort: 32180
          name: gitlab-ce
          protocol: TCP
        resources:
          limits:
            cpu: "4"
            memory: 16Gi
          requests:
            cpu: "4"
            memory: 16Gi
        volumeMounts:
        - mountPath: /etc/gitlab
          name: gitlab-ce-conf
        - mountPath: /var/opt/gitlab
          name: gitlab-ce-data
        - mountPath: /var/log/gitlab
          name: gitlab-ce-logs
        - mountPath: /dev/shm
          name: cache-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/critical-apps
        operator: Equal
        value: gitlab
      volumes:
      - name: gitlab-ce-conf
        persistentVolumeClaim:
          claimName: gitlab-ce-conf
      - name: gitlab-ce-data
        persistentVolumeClaim:
          claimName: gitlab-ce-data
      - name: gitlab-ce-logs
        persistentVolumeClaim:
          claimName: gitlab-ce-logs
      - emptyDir:
          medium: Memory
          sizeLimit: 256Mi
        name: cache-volume

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
#    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "720"
#    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
  labels:
    app.kubernetes.io/instance: gitlab-ce
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gitlab-ce
    app.kubernetes.io/version: "16.8.1-ce.0"
    helm.sh/chart: gitlab-ce-0.0.1
  name: gitlab-ce
spec:
  ingressClassName: nginx
  rules:
  - host: example.com
    http:
      paths:
      - backend:
          service:
            name: gitlab-ce
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
#  tls:
#  - hosts:
#    - example.com
#    secretName: example-com-tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
#    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 5000m
    nginx.ingress.kubernetes.io/proxy-buffer-size: 512k
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "720"
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: 1024m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/send-timeout: "600"
#    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
  labels:
    app.kubernetes.io/instance: gitlab-ce
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gitlab-ce
    app.kubernetes.io/version: "16.8.1-ce.0"
    helm.sh/chart: gitlab-ce-0.0.1
  name: gitlab-registry
spec:
  ingressClassName: nginx
  rules:
  - host: registry.example.com
    http:
      paths:
      - backend:
          service:
            name: gitlab-registry
            port:
              number: 5000
        path: /
        pathType: ImplementationSpecific
#  tls:
#  - hosts:
#    - example.com
#    secretName: example-com-tls
